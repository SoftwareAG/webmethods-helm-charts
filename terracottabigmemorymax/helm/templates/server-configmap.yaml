# /*
#  * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-server-configmap
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
data:
  license.key: |
      {{- .Values.terracotta.license | nindent 4 }}
  tc-config.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
    Copyright (c) 2011-2019 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.
    Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Software AG.
    -->

    <tc:tc-config xmlns:tc="http://www.terracotta.org/config">
      <servers secure="{{ $.Values.terracotta.security }}">
    {{- range $i := until (int $.Values.terracotta.stripeCount) }}
        <mirror-group>
    {{- range $j := until (int $.Values.terracotta.nodeCountPerStripe) }}
          <server host="terracotta-{{ add (mul $i $.Values.terracotta.nodeCountPerStripe) $j }}.terracotta-service.{{ $.Release.Namespace }}.svc.cluster.local"
                  name="terracotta-{{ add (mul $i $.Values.terracotta.nodeCountPerStripe) $j }}.terracotta-service.{{ $.Release.Namespace }}.svc.cluster.local">
            <tsa-port>{{ $.Values.terracotta.tsaPort }} </tsa-port>
            <tsa-group-port>{{ $.Values.terracotta.tsaGroupPort }}</tsa-group-port>
            <management-port>{{ $.Values.terracotta.tsaManagementPort }}</management-port>
            <data>/opt/softwareag/run/data</data>
            <logs>/opt/softwareag/run/logs</logs>
            <dataStorage size={{ $.Values.terracotta.datastoreSize | quote }}>
              <offheap size={{ $.Values.terracotta.offHeapSize | quote }}/>
            </dataStorage>
            {{- if eq $.Values.terracotta.security true }}
            <security>
              <ssl>
                <certificate>jks:terracotta-{{ add (mul $i $.Values.terracotta.nodeCountPerStripe) $j }}-alias@/opt/softwareag/run/terracotta-{{ add (mul $i $.Values.terracotta.nodeCountPerStripe) $j }}-keystore.jks</certificate>
              </ssl>
              <keychain>
                <class>com.terracotta.management.keychain.FileStoreKeyChain</class>
                <url>file:/opt/softwareag/run/keychain</url>
              </keychain>
              <auth>
                <realm>com.tc.net.core.security.ShiroIniRealm</realm>
                <url>file:/opt/softwareag/run/terracotta.ini</url>
                <user>user</user>
              </auth>
              <management>
                <ia>https://tmc-0.tmc-service.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.terracotta.tmcSecurePort }}/tmc/api/assertIdentity</ia>
                <timeout>10000</timeout>
                <hostname>terracotta-{{ add (mul $i $.Values.terracotta.nodeCountPerStripe) $j }}.terracotta-service.{{ $.Release.Namespace }}.svc.cluster.local</hostname >
              </management>
            </security>
            {{- end }}
          </server>
    {{- end }}
        </mirror-group>
    {{- end }}
        <restartable enabled={{ $.Values.terracotta.restartable | quote }}/>
      </servers>
    </tc:tc-config>