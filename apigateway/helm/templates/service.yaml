---
# /*
#  * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-rt
  labels:     
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
    service-name: {{ include "common.names.fullname" . }}-rt
spec:
  type: {{ .Values.service.type }}
  ports:
  - port: {{ int .Values.apigw.runtimePort }}
    protocol: TCP
    targetPort: {{ int .Values.apigw.runtimePort }}
    name: rtport
    {{- if (eq .Values.service.type "ClusterIP") }}
    nodePort: null
    {{- end }}
  selector:
    {{- include "common.labels.matchLabels" . | nindent 4}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-admin
  labels:     
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
    service-name: {{ include "common.names.fullname" . }}-admin
spec:
  type: {{ .Values.service.type }}
  ports:
  - port: {{ int .Values.apigw.adminPort }}
    protocol: TCP
    targetPort: {{ int .Values.apigw.adminPort }}
    name: adminport
    {{- if (eq .Values.service.type "ClusterIP") }}
    nodePort: null
    {{- end }}
  selector:
    {{- include "common.labels.matchLabels" . | nindent 4}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-ui
  labels:     
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
    service-name: {{ include "common.names.fullname" . }}-ui
spec:
  type: {{ .Values.service.type }}
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1000
  ports:
  - port: {{ int .Values.apigw.uiPort }}
    protocol: TCP
    targetPort: {{ int .Values.apigw.uiPort }}
    name: uiport
    {{- if (eq .Values.service.type "ClusterIP") }}
    nodePort: null
    {{- end }}
  selector:
    {{- include "common.labels.matchLabels" . | nindent 4}}
{{- if .Values.grpcService.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-grpc
  annotations:
  {{- if .Values.grpcService.azureInternalLoadBalancer }}
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  {{- end }}
  {{- if .Values.grpcService.dnsExternal }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.grpcService.hostname }}
  {{- end }}
  labels:     
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  type: {{ .Values.grpcService.type }}
  ports:
  - port: {{ int .Values.apigw.grpcPort }}
    protocol: TCP
    targetPort: {{ int .Values.apigw.grpcPort }}
    name: grpcport
    {{- if (eq .Values.grpcService.type "ClusterIP") }}
    nodePort: null
    {{- end }}
  selector:
    {{- include "common.labels.matchLabels" . | nindent 4}}
{{- end }}